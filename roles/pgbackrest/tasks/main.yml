---
- name: Include RHEL-specific pgbackrest installation tasks
  include_tasks: rhel.yml
  when: ansible_facts['os_family'] in ['RedHat', 'CentOS', 'Rocky']

- name: Create user 'pgbackrest' with home in opt
  ansible.builtin.user:
    name: pgbackrest
    shell: /bin/bash
    home: /opt/pgbackrest
    create_home: yes
    state: present

- name: Create pgbackrest configuration directory
  file:
    path: /etc/pgbackrest
    state: directory
    owner: pgbackrest
    group: pgbackrest
    mode: '0750'

# - name: Create pgbackrest configuration directory
#   file:
#     path: /opt/pgbackrest
#     state: directory
#     owner: pgbackrest
#     group: pgbackrest
#     mode: '0750'
#   when: "'pgbackrest' in group_names"

- name: Create pgbackrest log directory
  file:
    path: /var/log/pgbackrest
    state: directory
    owner: pgbackrest
    group: pgbackrest
    mode: '0750'

- name: Create pgbackrest config
  template:
    src: pgbackrest.conf.j2
    dest: /etc/pgbackrest/pgbackrest.conf
    owner: pgbackrest
    group: pgbackrest
    mode: '0640'
  when: "'pgbackrest' in group_names"
  
- name: Create backup script
  template:
    src: backup.sh.j2
    dest: /opt/backup.sh
    owner: pgbackrest
    group: pgbackrest
    mode: '0740'
  when: "'pgbackrest' in group_names"

- name: Create .pgpass file for pgBackRest
  template:
    src: pgpass.yml.j2
    dest: /opt/pgbackrest/.pgpass
    owner: pgbackrest
    group: pgbackrest
    mode: '0600'
  when: "'pgbackrest' in group_names"

- name: Create cron job for full backup
  cron:
    name: "pgBackRest Full Backup"
    minute: "{{ pgbackrest_crontab_interval_full.split(' ')[0] }}"
    hour: "{{ pgbackrest_crontab_interval_full.split(' ')[1] }}"
    day: "{{ pgbackrest_crontab_interval_full.split(' ')[2] }}"
    month: "{{ pgbackrest_crontab_interval_full.split(' ')[3] }}"
    weekday: "{{ pgbackrest_crontab_interval_full.split(' ')[4] }}"
    job: "/opt/backup.sh -t full -s {{ pgbackrest_stanza }}"
    user: pgbackrest
  when: 
    - pgbackrest_crontab_interval_full is defined
    - "'pgbackrest' in group_names"

- name: Create cron job for diff backup
  cron:
    name: "pgBackRest Diff Backup"
    minute: "{{ pgbackrest_crontab_interval_diff.split(' ')[0] }}"
    hour: "{{ pgbackrest_crontab_interval_diff.split(' ')[1] }}"
    day: "{{ pgbackrest_crontab_interval_diff.split(' ')[2] }}"
    month: "{{ pgbackrest_crontab_interval_diff.split(' ')[3] }}"
    weekday: "{{ pgbackrest_crontab_interval_diff.split(' ')[4] }}"
    job: "/opt/backup.sh -t diff -s {{ pgbackrest_stanza }}"
    user: pgbackrest
  when: 
    - pgbackrest_crontab_interval_diff is defined
    - "'pgbackrest' in group_names"

- name: Include exchange SSH keys tasks
  include_tasks: ssh_keys.yml